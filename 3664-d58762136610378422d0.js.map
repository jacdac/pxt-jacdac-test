{"version":3,"file":"3664-d58762136610378422d0.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Send.js","webpack://jacdac-docs/./src/components/dashboard/DashboardRos.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\nexports.default = _default;","import React, { useId, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport { Grid, TextField } from \"@mui/material\"\nimport useChange from \"../../jacdac/useChange\"\nimport { JDService, JSONTryParse, RosCmd, RosServer } from \"../../../jacdac-ts/src/jacdac\"\nimport CmdButton from \"../CmdButton\"\nimport SendIcon from \"@mui/icons-material/Send\"\n\nfunction RosMessageEditor(props: { service: JDService }) {\n    const { service } = props\n    const id = useId()\n    const nodeId = id + \"-node\"\n    const topicId = id + \"-topic\"\n    const messageId = id + \"-message\"\n\n    const [node, setNode] = useState(\"dashboard\")\n    const [topic, setTopic] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const handleNode = (event: React.ChangeEvent<HTMLInputElement>) => setNode(event.target.value)\n    const handleTopic = (event: React.ChangeEvent<HTMLInputElement>) => setTopic(event.target.value)\n    const handleMessage = (event: React.ChangeEvent<HTMLInputElement>) => setMessage(event.target.value)\n    const handlePublish = async () => {\n        await service.sendCmdPackedAsync(RosCmd.PublishMessage, [node, topic, message])\n    }\n\n    const jmsg = JSONTryParse(message)\n    const disabled = !node || !topic || !jmsg\n    const error = message && !jmsg ? \"Invalid JSON\" : undefined\n\n    return <>\n        <Grid item xs={12}>\n            <TextField\n                id={nodeId}\n                margin=\"normal\"\n                type=\"text\"\n                spellCheck=\"false\"\n                size=\"small\"\n                variant=\"outlined\"\n                label=\"Node\"\n                aria-label=\"Node name\"\n                fullWidth={true}\n                value={node}\n                onChange={handleNode}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextField\n                id={topicId}\n                margin=\"normal\"\n                type=\"text\"\n                spellCheck=\"false\"\n                size=\"small\"\n                variant=\"outlined\"\n                label=\"Topic\"\n                aria-label=\"Topic\"\n                fullWidth={true}\n                value={topic}\n                onChange={handleTopic}\n            />\n        </Grid>\n        <Grid item xs={12}>\n        <TextField\n                id={messageId}\n                margin=\"normal\"\n                type=\"text\"\n                spellCheck=\"false\"\n                size=\"small\"\n                variant=\"outlined\"\n                label=\"Message (JSON)\"\n                aria-label=\"Message (JSON)\"\n                fullWidth={true}\n                value={message}\n                onChange={handleMessage}\n                helperText={error}\n                error={!!error}\n            />\n\n        </Grid>\n        <Grid item xs={12}>\n            <CmdButton onClick={handlePublish} disabled={disabled} variant=\"outlined\" icon={<SendIcon />\n            }>Publish</CmdButton>\n        </Grid>\n    </>\n}\n\nexport default function DashboardRos(props: DashboardServiceProps) {\n    const { service, expanded } = props\n    const server = useServiceServer<RosServer>(service)\n\n    const subscriptions = useChange(server, _ => _?.subscriptions)\n    const messages = useChange(server, _ => _?.messages)\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                ROS\n            </Grid>\n            {expanded && <Grid item xs={12}><RosMessageEditor service={service} /></Grid>}\n            <Grid item xs={12}>\n                <pre style={{ width: \"100%\", whiteSpace: \"pre-wrap\", fontSize: \"70%\" }}>\n                    {`subscriptions: ${subscriptions?.join(\"   \\n\")}\nmessages: ${messages?.map(({ node, topic, message }) => `${node} ${topic} ${JSON.stringify(message)}`).join(\"    \\n\")}`}</pre>\n            </Grid>\n        </Grid>\n    )\n}"],"names":["id","useId","nodeId","topicId","messageId","useState","handleNode","event","setNode","handleTopic","setTopic","handleMessage","setMessage","handlePublish","service","RosCmd","jmsg","JSONTryParse","disabled","error","message","server","useServiceServer","subscriptions","useChange","_","messages","expanded","width","whiteSpace","fontSize","node","JSON"],"sourceRoot":""}