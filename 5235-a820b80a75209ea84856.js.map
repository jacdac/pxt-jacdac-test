{"version":3,"file":"5235-a820b80a75209ea84856.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/specification/DeviceSpecificationList.tsx"],"sourcesContent":["import React, { ReactNode, useMemo } from \"react\"\nimport { Grid, SxProps, Theme } from \"@mui/material\"\nimport { escapeDeviceIdentifier } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport { serviceName as renderServiceName } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport DeviceSpecificationCard from \"./DeviceSpecificationCard\"\nimport { isEC30 } from \"../enclosure/ec30\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport GridHeader from \"../ui/GridHeader\"\n\nexport default function DeviceSpecificationList(props: {\n    sx?: SxProps<Theme>\n    header?: ReactNode\n    query?: string\n    count?: number\n    company?: string\n    serviceClass?: number\n    serviceName?: string\n    devices?: jdspec.DeviceSpec[]\n    ids?: string[]\n    updates?: boolean\n    buyNow?: boolean\n    makeCode?: boolean | string\n    firmwareSources?: boolean\n    hardwareDesign?: boolean\n    transports?: jdspec.TransportType[]\n    tags?: string[]\n    ec30?: boolean\n    connector?: \"jacdac\" | \"grove\" | \"none\"\n    shapes?: jdspec.ShapeWellKnown[]\n    onDeviceClick?: (device: jdspec.DeviceSpec) => void\n    hideChips?: boolean\n    hideServices?: boolean\n}) {\n    const {\n        sx,\n        header,\n        query,\n        count,\n        serviceClass,\n        serviceName,\n        company,\n        devices,\n        updates,\n        buyNow,\n        makeCode,\n        hardwareDesign,\n        firmwareSources,\n        transports,\n        tags,\n        ec30,\n        connector,\n        shapes,\n        ids,\n        onDeviceClick,\n        hideChips,\n        hideServices,\n    } = props\n    const specifications = useDeviceSpecifications({\n        includeExperimental: !buyNow,\n    })\n    const specs = useMemo(() => {\n        let r = (devices || specifications).slice(0)\n        if (ids?.length) r = r.filter(({ id }) => ids.indexOf(id) > -1)\n        if (company) {\n            const lc = escapeDeviceIdentifier(company)\n            r = r.filter(spec =>\n                escapeDeviceIdentifier(spec.company).startsWith(lc)\n            )\n        }\n        if (!isNaN(serviceClass))\n            r = r.filter(spec => spec.services?.indexOf(serviceClass) > -1)\n        if (serviceName) {\n            const si = serviceSpecificationFromName(serviceName)\n            if (si)\n                r = r.filter(\n                    spec => spec.services?.indexOf(si.classIdentifier) > -1\n                )\n        }\n        if (updates) r = r.filter(spec => spec.repo)\n        if (buyNow !== undefined)\n            r = r.filter(spec => !!spec.storeLink === buyNow)\n        if (hardwareDesign) r = r.filter(spec => spec.hardwareDesign)\n        if (connector === \"jacdac\")\n            r = r.filter(\n                spec =>\n                    spec.connector !== \"noConnector\" &&\n                    spec.connector !== \"grove\" &&\n                    spec.connector !== \"qwiic\"\n            )\n        else if (connector === \"grove\")\n            r = r.filter(\n                spec => spec.connector === \"grove\" || spec.connector === \"qwiic\"\n            )\n        else if (connector === \"none\")\n            r = r.filter(\n                spec =>\n                    spec.connector === \"noConnector\" ||\n                    spec.connector === \"edgeIndependent\"\n            )\n\n        if (firmwareSources) r = r.filter(spec => spec.firmwareSource)\n        if (ec30)\n            r = r.filter(\n                spec => isEC30(spec.shape) || spec.tags?.includes(\"ec30\")\n            )\n        if (shapes)\n            r = r.filter(spec => shapes.some(shape => shape === spec.shape))\n        if (typeof makeCode === \"string\")\n            r = r.filter(spec =>\n                spec.makeCodeRepo?.some(r => r.target === makeCode)\n            )\n        else if (makeCode !== undefined)\n            r = r.filter(spec => !!spec.makeCodeRepo?.length === makeCode)\n        if (transports?.length)\n            r = r.filter(spec => transports.indexOf(spec.transport?.type) > -1)\n        if (tags?.length)\n            r = r.filter(spec => tags.every(tag => spec.tags?.includes(tag)))\n        if (query)\n            r = r.filter(spec =>\n                [\n                    spec.name,\n                    spec.description,\n                    spec.company,\n                    ...(spec.productIdentifiers || []).map(p => p.toString(16)),\n                    ...(spec.services || []).map(p => p.toString(16)),\n                    ...(spec.services || []).map(srv => renderServiceName(srv)),\n                ].some(s => s?.toLowerCase()?.indexOf(query.toLowerCase()) > -1)\n            )\n        r = r.sort((a, b) => {\n            // kits first\n            let c =\n                -(a.tags?.indexOf(\"kit\") > -1 ? 1 : 0) +\n                (b.tags?.indexOf(\"kit\") > -1 ? 1 : 0)\n            if (c) return c\n            // device with transports\n            c = -(a.transport ? 1 : 0) + (b.transport ? 1 : 0)\n            if (c) return c\n            // use ec30 shape\n            c = -(isEC30(a.shape) ? 1 : 0) + (isEC30(b.shape) ? 1 : 0)\n            if (c) return c\n            // with connectors first\n            c =\n                -(a.connector === \"noConnector\" ||\n                a.connector === \"edgePassive\" ||\n                a.connector === \"edgeIndependent\"\n                    ? 1\n                    : 0) +\n                (b.connector === \"noConnector\" ||\n                b.connector === \"edgePassive\" ||\n                b.connector === \"edgeIndependent\"\n                    ? 1\n                    : 0)\n            if (c) return c\n\n            // by order\n            c = (a.order || 50) - (b.order || 50)\n            if (c) return c\n            // by name\n            return a.name.localeCompare(b.name)\n        })\n        if (count !== undefined) r = r.slice(0, count)\n        return r\n    }, [\n        query,\n        serviceClass,\n        serviceName,\n        count,\n        company,\n        JSON.stringify(devices?.map(d => d.id)),\n        specifications,\n        updates,\n        buyNow,\n        makeCode,\n        hardwareDesign,\n        firmwareSources,\n        transports?.join(\",\"),\n        tags?.join(\",\"),\n        ec30,\n        connector,\n        shapes?.join(\",\"),\n        ids?.join(\",\"),\n    ])\n    const gridBreakpoints = useGridBreakpoints(specs.length)\n    const size = specs?.length < 6 ? \"catalog\" : \"preview\"\n\n    if (!specs.length) return null\n\n    return (\n        <Grid sx={sx} container spacing={3}>\n            {header && <GridHeader title={header} />}\n            {specs.map(specification => (\n                <Grid key={specification.id} item {...gridBreakpoints}>\n                    <DeviceSpecificationCard\n                        specification={specification}\n                        size={size}\n                        onClick={\n                            onDeviceClick\n                                ? () => onDeviceClick(specification)\n                                : undefined\n                        }\n                        hideChips={hideChips}\n                        hideServices={hideServices}\n                    />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n"],"names":["serviceName","specifications","useDeviceSpecifications","includeExperimental","specs","useMemo","r","devices","ids","lc","escapeDeviceIdentifier","spec","isNaN","si","serviceSpecificationFromName","buyNow","connector","isEC30","shapes","shape","makeCode","transports","tags","tag","p","srv","renderServiceName","s","query","c","a","b","count","JSON","d","gridBreakpoints","useGridBreakpoints","size","header","specification","onDeviceClick"],"sourceRoot":""}