{"version":3,"file":"5457-2b7e6d9dea243c3262f0.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;AACnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;AACf,4CAA4C,mBAAO,CAAC,KAAuB;AAC3E,kBAAkB,mBAAO,CAAC,KAAmB;AAC7C;AACA;AACA,CAAC;AACD,SAAe;;;;;;;;;;;;;;;;;;;;;ACEA,sCAA8D,CACzE,GAAM,mBAAN,MAEA,GAAMA,CAAAA,iBAAiB,CAAGC,uEAAW,SAAUC,0GAAV,CAArC,CACA,GAAM,mDACFC,4FAAwB,mBAD5B,KAC4B,CAD5B,CAKA,GAAMC,CAAAA,UAAU,mIAAG,WAAY,CAC3B,GAAMC,CAAAA,GAAG,CAAG,GAAZ,KAAY,EAAZ,CACA,GAAMC,CAAAA,IAAI,CAAGD,GAAG,CAAhB,WAAaA,EAAb,CACA,GAAME,CAAAA,KAAK,CAAGF,GAAG,CAAHA,QAAAA,GAAd,EACA,GAAMG,CAAAA,UAAU,CAAGH,GAAG,CAAtB,OAAmBA,EAAnB,CACA,GAAMI,CAAAA,SAAS,CAAGJ,GAAG,CAArB,MAAkBA,EAAlB,CACA,GAAMK,CAAAA,IAAI,CAAGL,GAAG,CAAhB,QAAaA,EAAb,CACA,GAAMM,CAAAA,GAAG,CAAGN,GAAG,CAAf,UAAYA,EAAZ,CACA,GAAMO,CAAAA,MAAM,CAAGP,GAAG,CAAlB,UAAeA,EAAf,CACA,KAAMQ,CAAAA,OAAO,CAAPA,kBAAAA,CAA2BC,sGAA3BD,CAAqD,0CAA3D,MAA2D,CAArDA,CAAN,CATY,SAAVT,SAAAA,CAAAA,UAAAA,EAAU,qCAAhB,CAAgB,EAAhB,CAoBA,GAAIE,IAAI,GAAR,UACI,mBAAO,mIAAgC,QAAQ,CAA/C,iBAAO,EAAP,CAEJ,GAAMS,CAAAA,CAAC,CAAG,cAAeR,KAAK,CAApB,sBAAV,OAAU,CAAV,CACA,GAAMS,CAAAA,IAAI,CAAGD,CAAC,CAAd,kBAAaA,EAAb,CACA,GAAME,CAAAA,IAAI,CAAGF,CAAC,CAAd,kBAAaA,EAAb,CACA,mBACI,kHAAM,SAAS,CAAf,KAAgB,OAAO,CAAvB,gBACI,kHAAM,IAAI,CAAV,mBACI,kHAAM,SAAS,CAAf,KAAgB,OAAO,CAAvB,EAA4B,SAAS,CAArC,uBACI,kHAAM,IAAI,CAAV,mBACI,iHACI,KAAK,CADT,OAEI,QAAQ,CAFZ,EAGI,IAAI,CAHR,QAII,aAJJ,KAKI,OAAO,CALX,aAFR,IAEQ,CADJ,CADJ,cAYI,kHAAM,IAAI,CAAV,mBACI,iHACI,KAAK,CADT,SAEI,QAAQ,CAFZ,EAGI,IAAI,CAHR,QAII,aAJJ,KAKI,OAAO,CALX,aAfhB,IAegB,CADJ,CAZJ,CADJ,CADJ,CA2BKG,QAAQ,eACL,kHAAM,IAAI,CAAV,mBACI,8GACI,KAAK,CADT,YAEI,OAAO,CAFX,WAGI,IAAI,cAAE,2HAHV,IAGU,CAHV,EA9BhB,MA8BgB,CADJ,CA5BR,CADJ,CAyCH","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Sync.js","webpack://jacdac-docs/./src/components/dashboard/DashboardRealTimeClock.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Sync');\nexports.default = _default;","import React from \"react\"\nimport {\n    RealTimeClockCmd,\n    RealTimeClockReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { RealTimeClockReadingType } from \"../../../jacdac-ts/src/servers/realtimeclockserver\"\nimport { Grid, Typography } from \"@mui/material\"\nimport useRegister from \"../hooks/useRegister\"\nimport SyncIcon from \"@mui/icons-material/Sync\"\nimport CmdButton from \"../CmdButton\"\nimport DashboardRegisterValueFallback from \"./DashboardRegisterValueFallback\"\n\nexport default function DashboardRealTimeClock(props: DashboardServiceProps) {\n    const { service, expanded } = props\n\n    const localTimeRegister = useRegister(service, RealTimeClockReg.LocalTime)\n    const [year, month, dayOfMonth, dayOfWeek, hour, min, seconds] =\n        useRegisterUnpackedValue<RealTimeClockReadingType>(\n            localTimeRegister,\n            props\n        )\n    const handleSync = async () => {\n        const now = new Date()\n        const year = now.getFullYear()\n        const month = now.getMonth() + 1\n        const dayOfMonth = now.getDate()\n        const dayOfWeek = now.getDay()\n        const hour = now.getHours()\n        const min = now.getMinutes()\n        const second = now.getSeconds()\n        await service.sendCmdPackedAsync(RealTimeClockCmd.SetTime, [\n            year,\n            month,\n            dayOfMonth,\n            dayOfWeek,\n            hour,\n            min,\n            second,\n        ])\n    }\n\n    if (year === undefined)\n        return <DashboardRegisterValueFallback register={localTimeRegister} />\n\n    const t = new Date(year, month - 1, dayOfMonth, hour, min, seconds)\n    const date = t.toLocaleDateString()\n    const time = t.toLocaleTimeString()\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <Grid container spacing={1} direction=\"column\">\n                    <Grid item>\n                        <Typography\n                            align=\"left\"\n                            tabIndex={0}\n                            role=\"timer\"\n                            aria-label={date}\n                            variant=\"subtitle2\"\n                        >\n                            {date}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography\n                            align=\"center\"\n                            tabIndex={0}\n                            role=\"timer\"\n                            aria-label={time}\n                            variant=\"subtitle1\"\n                        >\n                            {time}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {expanded && (\n                <Grid item>\n                    <CmdButton\n                        title=\"Sync time\"\n                        onClick={handleSync}\n                        icon={<SyncIcon />}\n                    >\n                        Sync\n                    </CmdButton>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"names":["localTimeRegister","useRegister","RealTimeClockReg","useRegisterUnpackedValue","handleSync","now","year","month","dayOfMonth","dayOfWeek","hour","min","second","service","RealTimeClockCmd","t","date","time","expanded"],"sourceRoot":""}