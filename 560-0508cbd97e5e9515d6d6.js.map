{"version":3,"file":"560-0508cbd97e5e9515d6d6.js","mappings":";;;;;;;;;;;;;;AAMA,GAAMA,CAAAA,kBAAkB,cAAGC,2CAAI,CAAC,IAAM,qGAAP,CAA/B,CAEe,yBAIZ,CACC,GAAM,uBAAN,MACA,GAAMC,CAAAA,OAAO,CAAb,6DACA,GAAMC,CAAAA,KAAK,CAAGC,8CAAO,CAAC,IAAMC,4DAAW,OAAlB,KAAkB,CAAlB,CAAkC,OAAvD,KAAuD,CAAlC,CAArB,CACA,GAAI,CAAJ,MACI,mBAAO,6GAAO,QAAQ,CAAf,QAAP,mCAAO,CAAP,CAEJ,mBACI,iIACI,qEACI,KAAK,CADT,MAEI,OAAO,CAFX,QAGI,kBAAkB,CAHtB,KAII,QAAQ,CANpB,QAEQ,EADJ,CADJ,CAUH","sources":["webpack://jacdac-docs/./src/components/enclosure/Enclosure.tsx"],"sourcesContent":["import React, { lazy } from \"react\"\nimport { useMemo } from \"react\"\nimport Alert from \"../ui/Alert\"\nimport Suspense from \"../ui/Suspense\"\nimport { DEFAULT_OPTIONS, shapeToEC30 } from \"./ec30\"\n\nconst EnclosureGenerator = lazy(() => import(\"../enclosure/EnclosureGenerator\"))\n\nexport default function Enclosure(props: {\n    shape: jdspec.Shape\n    depth?: number\n    showSave?: boolean\n}) {\n    const { shape, depth, showSave } = props\n    const options = DEFAULT_OPTIONS\n    const model = useMemo(() => shapeToEC30(shape, depth), [shape, depth])\n    if (!model)\n        return <Alert severity=\"info\">PCB form factor is not supported.</Alert>\n\n    return (\n        <Suspense>\n            <EnclosureGenerator\n                model={model}\n                options={options}\n                hideAfterGenerated={true}\n                showSave={showSave}\n            />\n        </Suspense>\n    )\n}\n"],"names":["EnclosureGenerator","lazy","options","model","useMemo","shapeToEC30"],"sourceRoot":""}