{"version":3,"file":"6775-4dd708c881e69246a3a8.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;AACnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;AACf,4CAA4C,mBAAO,CAAC,KAAuB;AAC3E,kBAAkB,mBAAO,CAAC,KAAmB;AAC7C;AACA;AACA,CAAC;AACD,SAAe;;;;;;;;;;;;;;;;;;;;;;qCCVf;AAEA;AAgBe,4CAEb,CACE,GAAM,mBAAN,MAA8BA,IAA9B,+HAEA,GAAMC,CAAAA,eAAe,CAAGC,uEAAW,SAAUC,4GAAV,CAAnC,CACA,GAAMC,CAAAA,iBAAiB,CAAGF,uEAAW,SAEjCC,gHAFiC,CAArC,CAIA,GAAME,CAAAA,kBAAkB,CAAGH,uEAAW,SAAUI,qGAAV,CAAtC,CACA,GAAMC,CAAAA,OAAO,CAAGC,wFAAoB,iBAApC,IAAoC,CAApC,CACA,GAAMC,CAAAA,SAAS,CAAGD,wFAAoB,mBAAtC,IAAsC,CAAtC,CACA,GAAM,aAAeE,4FAAwB,oBAA7C,IAA6C,CAA7C,CACA,GAAMC,CAAAA,QAAQ,CACVC,UAAU,GAAVA,SAAAA,EACAA,UAAU,GAAKC,mIAFnB,CAIA,GAAMC,CAAAA,SAAS,CAAG,IAAMb,eAAN,OAAMA,EAAAA,eAAN,SAAMA,CAAN,MAAMA,CAAAA,eAAe,CAAfA,gBAAAA,CAAAA,IAAAA,CAAxB,IAAwBA,CAAxB,CACA,GAAMc,CAAAA,UAAU,CAAG,IAAMd,eAAN,OAAMA,EAAAA,eAAN,SAAMA,CAAN,MAAMA,CAAAA,eAAe,CAAfA,gBAAAA,CAAAA,KAAAA,CAAzB,IAAyBA,CAAzB,CACA,GAAMe,CAAAA,qBAAqB,CAAG,iBAGzBZ,iBAHyB,OAGzBA,EAAAA,iBAHyB,SAGzBA,CAHyB,MAGzBA,CAAAA,iBAAiB,CAAjBA,gBAAAA,CAAAA,OAAAA,CAHL,IAGKA,CAHL,CAKA,mBACI,kHAAM,SAAS,CAAf,KAAgB,OAAO,CAAvB,gBACI,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,iBACI,8GACI,QAAQ,CADZ,SAEI,OAAO,CAFX,WAGI,KAAK,CAAEG,OAAO,WAHlB,UAII,OAAO,CAAEA,OAAO,YAJpB,UAKI,IAAI,CAAEA,OAAO,cAAG,2HAAH,IAAG,CAAH,cAAkB,iIALnC,IAKmC,CALnC,EAOKA,OAAO,QATpB,OAEQ,CADJ,CADJ,CAYKU,QAAQ,eACL,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,mBACI,uHACI,KAAK,CADT,aAEI,OAAO,CAAER,SAAS,EAFtB,MAGI,QAAQ,CAAEA,SAAS,GAHvB,UAII,QAAQ,CAnB5B,qBAegB,EADJ,CAbR,CADJ,CAyBH","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Stop.js","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceScriptManager.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\nexports.default = _default;","import React, { ChangeEvent } from \"react\"\nimport { Grid } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport StopIcon from \"@mui/icons-material/Stop\"\nimport CmdButton from \"../CmdButton\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { SystemStatusCodes } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport useRegister from \"../hooks/useRegister\"\nimport {\n    DeviceScriptManagerReg,\n    SystemReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\n\nexport default function DashboardDeviceScriptManager(\n    props: DashboardServiceProps\n) {\n    const { service, expanded, ...rest } = props\n\n    const runningRegister = useRegister(service, DeviceScriptManagerReg.Running)\n    const autoStartRegister = useRegister(\n        service,\n        DeviceScriptManagerReg.Autostart\n    )\n    const statusCodeRegister = useRegister(service, SystemReg.StatusCode)\n    const running = useRegisterBoolValue(runningRegister, rest)\n    const autoStart = useRegisterBoolValue(autoStartRegister, rest)\n    const [statusCode] = useRegisterUnpackedValue(statusCodeRegister, rest)\n    const disabled =\n        statusCode === undefined ||\n        statusCode === SystemStatusCodes.WaitingForInput\n\n    const handleRun = () => runningRegister?.sendSetBoolAsync(true, true)\n    const handleStop = () => runningRegister?.sendSetBoolAsync(false, true)\n    const handleAutoStartChange = (\n        event: ChangeEvent<HTMLInputElement>,\n        checked: boolean\n    ) => autoStartRegister?.sendSetBoolAsync(checked, true)\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <CmdButton\n                    disabled={disabled}\n                    variant=\"outlined\"\n                    title={running ? \"running\" : \"stopped\"}\n                    onClick={running ? handleStop : handleRun}\n                    icon={running ? <StopIcon /> : <PlayArrowIcon />}\n                >\n                    {running ? \"stop\" : \"start\"}\n                </CmdButton>\n            </Grid>\n            {expanded && (\n                <Grid item xs>\n                    <SwitchWithLabel\n                        label=\"auto start\"\n                        checked={autoStart || false}\n                        disabled={autoStart === undefined}\n                        onChange={handleAutoStartChange}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"names":["rest","runningRegister","useRegister","DeviceScriptManagerReg","autoStartRegister","statusCodeRegister","SystemReg","running","useRegisterBoolValue","autoStart","useRegisterUnpackedValue","disabled","statusCode","SystemStatusCodes","handleRun","handleStop","handleAutoStartChange","expanded"],"sourceRoot":""}