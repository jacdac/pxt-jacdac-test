{"version":3,"file":"7770-76fe69ff149fc0cdfea4.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA;AAKA,6BAA+D,CAC3D,GAAMA,CAAAA,IAAI,CAAG,CAAb,IAAa,CAAb,CACA,MAAOA,IAAI,CAAX,OAAoB,CAChB,GAAMC,CAAAA,KAAI,CAAGD,IAAI,CAAjB,GAAaA,EAAb,CACAE,GAAG,CAAHA,KAAG,CAAHA,CACAD,KAAI,CAAJA,QAAAA,CAAAA,OAAAA,CAAsBE,KAAK,EAAIH,IAAI,CAAJA,IAAAA,CAA/BC,KAA+BD,CAA/BC,EAEP,CAED,4BAA8C,CAC1C,GAAM,OAAN,MACA,GAAMG,CAAAA,SAAS,CAAGH,IAAI,CAAtB,WACA,GAAMI,CAAAA,gBAAgB,CAAGJ,IAAI,CAAJA,gBAAAA,EAAzB,GACA,GAAMK,CAAAA,MAAM,CAAGC,MAAM,CAANA,IAAAA,CAAAA,SAAAA,EAAAA,MAAAA,CACHC,EAAE,EAAIJ,SAAS,CAATA,EAAS,CAATA,EAAiBC,gBAAgB,CADpCE,EACoC,CADpCA,EAAAA,IAAAA,CAEL,OAAU,CAACH,SAAS,CAAV,CAAU,CAAV,CAAgBA,SAAS,CAF7C,CAE6C,CAF9BG,CAAf,CAGA,GAAME,CAAAA,SAAS,CAAGH,MAAM,CAANA,MAAAA,CACNE,EAAE,EAAIA,EAAE,GAAFA,qFAAAA,EAA0BA,EAAE,GAD5BF,kFAAAA,EAAAA,GAAAA,CAETE,EAAE,EAAIJ,SAAS,CAATA,EAAS,CAATA,CAFGE,CAAAA,EAAAA,MAAAA,CAGN,aAAgBI,IAAI,CAHdJ,IAAAA,CAAlB,CAAkBA,CAAlB,CAIA,GAAMK,CAAAA,gBAAgB,CAAGL,MAAM,CAANA,GAAAA,CAChBE,EAAE,EAAIH,gBAAgB,CAAhBA,EAAgB,CAAhBA,CADUC,CAAAA,EAAAA,MAAAA,CAEb,aAAgBI,IAAI,CAFPJ,IAAAA,CAAzB,CAAyBA,CAAzB,CAIA,GAAIG,SAAS,EAAb,EAAoB,YAEpB,mBACI,+GACI,kIACI,kIACI,qHAAYR,IAAI,CADpB,EACI,CADJ,cAEI,qHAFJ,SAEI,CAFJ,cAGI,qHALZ,gBAKY,CAHJ,CADJ,CADJ,cAQI,qHACKK,MAAM,CAANA,GAAAA,CAAWE,EAAE,eACV,iHAAU,GAAG,UAAb,iBACI,qHADJ,EACI,CADJ,cAEI,qHAAYJ,SAAS,CAATA,EAAS,CAATA,EAFhB,CAEI,CAFJ,cAGI,qHAAYC,gBAAgB,CAAhBA,EAAgB,CAAhBA,EAdhC,CAcoB,CAHJ,CADHC,CADL,CARJ,CADJ,CAsBJ,qBAAqB,CACjB,GAAM,MAAUM,iDAAU,CAA1B,gEAA0B,CAA1B,CACA,GAAMC,CAAAA,KAA6B,CAAnC,GACAC,UAAU,KAAMC,CAAC,EAAKF,KAAK,CAACE,CAAC,CAAPF,EAAK,CAALA,CAAtBC,CAAU,CAAVA,CAEA,mBACI,gHAAU,GAAG,CAAb,sBACI,kIACI,kHAAO,IAAI,CAAX,sBACI,kIACI,kIACI,qHADJ,MACI,CADJ,cAEI,qHAFJ,OAEI,CAFJ,cAGI,qHALZ,cAKY,CAHJ,CADJ,CADJ,CAQKP,MAAM,CAANA,MAAAA,CAAAA,KAAAA,EAAAA,GAAAA,CAAyBN,IAAI,eAC1B,8DAAa,GAAG,UAAWA,IAAI,CAA/B,GAAsC,IAAI,CAZ9D,IAYoB,EADHM,CARL,CADJ,CADJ,CADJ,CAoBJ,gCAAkD,CAC9C,GAAM,OAAN,MACA,GAAMS,CAAAA,UAAU,CAAGf,IAAI,CAAJA,UAAAA,GAAAA,MAAAA,CAEPO,EAAE,EAAIP,IAAI,CAAJA,aAAAA,CAFCA,EAEDA,CAFCA,EAAAA,IAAAA,CAGT,OAAU,CAACA,IAAI,CAAJA,aAAAA,CAAD,CAACA,CAAD,CAAyBA,IAAI,CAAJA,aAAAA,CAH7C,CAG6CA,CAH1BA,CAAnB,CAIA,GAAMgB,CAAAA,MAAM,CAAGD,UAAU,CAAVA,GAAAA,CAAeR,EAAE,EAAIP,IAAI,CAAJA,aAAAA,CAApC,EAAoCA,CAArBe,CAAf,CACA,GAAME,CAAAA,KAAK,CAAGD,MAAM,CAANA,MAAAA,CAAc,OAAUE,CAAC,CAAzBF,CAAAA,CAAd,CAAcA,CAAd,CAEA,GAAMG,CAAAA,WAAW,CAAIZ,EAAD,EAAgB,IAAM,CACtC,GAAMa,CAAAA,WAAW,CAAGpB,IAAI,CAAJA,mBAAAA,CAApB,EAAoBA,CAApB,CACAoB,WAAW,CAAXA,OAAAA,CAAoBC,EAAE,EAAIC,OAAO,CAAPA,GAAAA,CAA1BF,EAA0BE,CAA1BF,EAFJ,EAKA,GAAIH,KAAK,EAAT,EAAgB,YAEhB,mBACI,+GACI,kIACI,kIACI,iHAAW,MAAM,CAAjB,OAAyBjB,IAAI,CADjC,EACI,CADJ,cAEI,iHAAW,MAAM,CAAjB,OAFJ,KAEI,CAFJ,cAGI,gHALZ,IAKY,CAHJ,CADJ,CADJ,cAQI,qHACKe,UAAU,CAAVA,GAAAA,CAAe,qBACZ,iHAAU,GAAG,aAAb,iBACI,qHADJ,EACI,CADJ,cAEI,qHAAYC,MAAM,CAFtB,CAEsB,CAAlB,CAFJ,cAGI,kIACI,kHAAQ,IAAI,CAAZ,QAAqB,OAAO,CAAEG,WAAW,CAAzC,EAAyC,CAAzC,EAfxB,QAewB,CADJ,CAHJ,CADHJ,CADL,CARJ,CADJ,CA0BJ,yBAAyB,CACrB,GAAM,MAAUJ,iDAAU,CAA1B,gEAA0B,CAA1B,CACA,GAAMC,CAAAA,KAA6B,CAAnC,GACAC,UAAU,KAAMC,CAAC,EAAKF,KAAK,CAACE,CAAC,CAAPF,EAAK,CAALA,CAAtBC,CAAU,CAAVA,CAEA,mBACI,gHAAU,GAAG,CAAb,sBACI,kIACI,kHAAO,IAAI,CAAX,SACKP,MAAM,CAANA,MAAAA,CAAAA,KAAAA,EAAAA,GAAAA,CAAyBN,IAAI,eAC1B,kEAAiB,GAAG,SAAUA,IAAI,CAAlC,GAAyC,IAAI,CALjE,IAKoB,EADHM,CADL,CADJ,CADJ,CADJ,CAaJ,CAAe,yBAA0B,CACrC,GAAM,uBAA0BiB,2CAAAA,CAAhC,KAAgCA,CAAhC,CACA,GAAM,aAAYC,+CAAQ,CAA1B,CAA0B,CAA1B,CACA,GAAMC,CAAAA,aAAa,CAAG,IAAM,CACxBC,IAAI,CAACC,CAAC,CAAND,CAAI,CAAJA,CADJ,EAIA,GAAME,CAAAA,YAAY,CACbC,KAAD,EACA,oBAA4D,CACxDC,WAAW,CAACC,UAAU,OAAtBD,KAAW,CAAXA,CAHR,EAMA,mBACI,6GAAO,QAAQ,CAAf,qBACI,qJAEI,kHAAQ,OAAO,CAAf,WAA2B,OAAO,CAAlC,eAHR,SAGQ,CAFJ,CADJ,cAOI,0DAPJ,kHAOI,CAPJ,cAWI,kHACI,QAAQ,CAAEE,QAAQ,GADtB,YAEI,QAAQ,CAAEJ,YAAY,CAF1B,WAE0B,CAF1B,eAII,kHAAkB,UAAU,cAAE,kIAA9B,IAA8B,CAA9B,EAJJ,iBAII,CAJJ,cAOI,mIACI,+DAnBZ,IAmBY,CADJ,CAPJ,CAXJ,cAsBI,kHACI,QAAQ,CAAEI,QAAQ,GADtB,QAEI,QAAQ,CAAEJ,YAAY,CAF1B,OAE0B,CAF1B,eAII,kHAAkB,UAAU,cAAE,kIAA9B,IAA8B,CAA9B,EAJJ,aAII,CAJJ,cAOI,mIACI,2DA/BhB,IA+BgB,CADJ,CAPJ,CAtBJ,CADJ,CAoCH;;;;;;;;;;;;;2DC5Mc,wBAEb,CACE,GAAM,UAAYK,OAAO,CAAnB,EAAyBC,SAAS,CAAlC,WAAN,MAA0DC,MAA1D,+HACA,mBACI,iHACI,EAAE,gBAAIC,EAAE,CAAN,UAAoBlB,CAAC,CAArB,SADN,MACM,CADN,CAEI,MAAM,CAFV,KAGI,SAAS,CAHb,WADJ,QACI,CADJ,CASH","sources":["webpack://jacdac-docs/./src/components/shell/WebDiagnostics.tsx","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx"],"sourcesContent":["import {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n} from \"@mui/material\"\nimport React, { useContext, useState } from \"react\"\nimport {\n    NEW_LISTENER,\n    REMOVE_LISTENER,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDNode } from \"../../../jacdac-ts/src/jdom/node\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\"\nimport Alert from \"../ui/Alert\"\nimport { AlertTitle } from \"@mui/material\"\n\nfunction visitNodes(node: JDNode, vis: (node: JDNode) => void) {\n    const todo = [node]\n    while (todo.length) {\n        const node = todo.pop()\n        vis(node)\n        node.children.forEach(child => todo.push(child))\n    }\n}\n\nfunction NodeCallRow(props: { node: JDNode }) {\n    const { node } = props\n    const emitStats = node.eventStats\n    const newListenerStats = node.newListenerStats || {}\n    const events = Object.keys(emitStats)\n        .filter(ev => emitStats[ev] || newListenerStats[ev])\n        .sort((l, r) => -emitStats[l] + emitStats[r])\n    const emitTotal = events\n        .filter(ev => ev !== REMOVE_LISTENER && ev !== NEW_LISTENER)\n        .map(ev => emitStats[ev] | 0)\n        .reduce((prev, curr) => prev + curr, 0)\n    const newListenerTotal = events\n        .map(ev => newListenerStats[ev] | 0)\n        .reduce((prev, curr) => prev + curr, 0)\n\n    if (emitTotal == 0) return null\n\n    return (\n        <>\n            <TableHead>\n                <TableRow>\n                    <TableCell>{node.id}</TableCell>\n                    <TableCell>{emitTotal}</TableCell>\n                    <TableCell>{newListenerTotal}</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {events.map(ev => (\n                    <TableRow key={`event:${ev}`}>\n                        <TableCell>{ev}</TableCell>\n                        <TableCell>{emitStats[ev] || 0}</TableCell>\n                        <TableCell>{newListenerStats[ev] || 0}</TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </>\n    )\n}\n\nfunction NodeCalls() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const nodes: Record<string, JDNode> = {}\n    visitNodes(bus, n => (nodes[n.id] = n))\n\n    return (\n        <PaperBox key=\"slots\">\n            <TableContainer>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>node</TableCell>\n                            <TableCell>calls</TableCell>\n                            <TableCell>new listener</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    {Object.values(nodes).map(node => (\n                        <NodeCallRow key={`calls:${node.id}`} node={node} />\n                    ))}\n                </Table>\n            </TableContainer>\n        </PaperBox>\n    )\n}\n\nfunction NodeListenerRow(props: { node: JDNode }) {\n    const { node } = props\n    const eventNames = node\n        .eventNames()\n        .filter(ev => node.listenerCount(ev))\n        .sort((l, r) => -node.listenerCount(l) + node.listenerCount(r))\n    const counts = eventNames.map(ev => node.listenerCount(ev))\n    const total = counts.reduce((p, c) => p + c, 0)\n\n    const handleClick = (ev: string) => () => {\n        const stackTraces = node.listenerStackTraces(ev)\n        stackTraces.forEach(st => console.log(st))\n    }\n\n    if (total == 0) return null\n\n    return (\n        <>\n            <TableHead>\n                <TableRow>\n                    <TableCell valign=\"top\">{node.id}</TableCell>\n                    <TableCell valign=\"top\">{total}</TableCell>\n                    <TableCell />\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {eventNames.map((ev, i) => (\n                    <TableRow key={`listener:${ev}`}>\n                        <TableCell>{ev}</TableCell>\n                        <TableCell>{counts[i]}</TableCell>\n                        <TableCell>\n                            <Button size=\"small\" onClick={handleClick(ev)}>\n                                traces\n                            </Button>\n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </>\n    )\n}\n\nfunction NodeListeners() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const nodes: Record<string, JDNode> = {}\n    visitNodes(bus, n => (nodes[n.id] = n))\n\n    return (\n        <PaperBox key=\"slots\">\n            <TableContainer>\n                <Table size=\"small\">\n                    {Object.values(nodes).map(node => (\n                        <NodeListenerRow key={`node:${node.id}`} node={node} />\n                    ))}\n                </Table>\n            </TableContainer>\n        </PaperBox>\n    )\n}\n\nexport default function WebDiagnostics() {\n    const [expanded, setExpanded] = React.useState<string | false>(false)\n    const [v, setV] = useState(0)\n    const handleRefresh = () => {\n        setV(v + 1)\n    }\n\n    const handleChange =\n        (panel: string) =>\n        (event: React.ChangeEvent<unknown>, isExpanded: boolean) => {\n            setExpanded(isExpanded ? panel : false)\n        }\n\n    return (\n        <Alert severity=\"info\">\n            <AlertTitle>\n                Diagnostics{\" \"}\n                <Button variant=\"outlined\" onClick={handleRefresh}>\n                    refresh\n                </Button>\n            </AlertTitle>\n            <p>\n                This diagnostics view does not register events to refresh\n                automatically. Click the button above to refresh data.\n            </p>\n            <Accordion\n                expanded={expanded === \"listeners\"}\n                onChange={handleChange(\"listeners\")}\n            >\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    Event Listeners\n                </AccordionSummary>\n                <AccordionDetails>\n                    <NodeListeners />\n                </AccordionDetails>\n            </Accordion>\n            <Accordion\n                expanded={expanded === \"calls\"}\n                onChange={handleChange(\"calls\")}\n            >\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    Event Calls\n                </AccordionSummary>\n                <AccordionDetails>\n                    <NodeCalls />\n                </AccordionDetails>\n            </Accordion>\n        </Alert>\n    )\n}\n","import { BoxProps, Paper } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function PaperBox(\n    props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps\n) {\n    const { children, padding = 1, elevation = 1, bgcolor, ...others } = props\n    return (\n        <Paper\n            sx={{ mb: 1, bgcolor, p: padding, ...others }}\n            square\n            elevation={elevation}\n        >\n            {children}\n        </Paper>\n    )\n}\n"],"names":["todo","node","vis","child","emitStats","newListenerStats","events","Object","ev","emitTotal","prev","newListenerTotal","useContext","nodes","visitNodes","n","eventNames","counts","total","p","handleClick","stackTraces","st","console","React","useState","handleRefresh","setV","v","handleChange","panel","setExpanded","isExpanded","expanded","padding","elevation","others","mb"],"sourceRoot":""}