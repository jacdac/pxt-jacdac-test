{"version":3,"file":"8035-4dd9b8bd9cbbf152953a.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAuF;AAC5B;AACpD;AACP,SAAS,uCAAoB;AAC7B;AACA,2BAA2B,yCAAsB;AACjD,mEAAe,kEAAkB;;;;ACNmE;AAC1C;AAC1D;AAC+B;AACI;AACX;AAC8C;AAChC;AACc;AACc;AAClB;AAChD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,iCAAc,QAAQ,0BAA0B;AACzD;AACA,wBAAwB,0BAAM;AAC9B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,CAAC;AACD;AACA,CAAC,KAAK,8BAAQ;AACd;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD,iCAAiC,gBAAgB;AACjD,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC,qBAAqB,8BAAQ,GAAG;AAChC;AACA,GAAG;AACH;AACA,sBAAsB,mBAAI,kBAAkB,8BAAQ;AACpD,eAAe,yBAAI;AACnB;AACA;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CA0BvC,CAAC;AACF,4DAAe,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EX,yBAA0D,CACrE,GAAM,aAAN,MACA,GAAM,8BAAN,MACA,GAAM,iBAAqBA,oBAAU,CAArC,6BAAqC,CAArC,CAEA,GAAMC,CAAAA,WAAW,CAAG,IAAM,CACtBC,cAAc,CAAdA,KAAc,CAAdA,CACAC,iCAAQ,CAARA,eAAQ,CAARA,CAFJ,EAKA,mBACI,0DACI,+CACI,KAAK,CADT,KAEI,SAAS,CAAKC,iCAAc,CAAnB,QAAmB,CAAdA,CAAL,IAAKA,CAAL,MAAKA,CAHtB,UACI,EADJ,cAKI,oDACKC,WAAW,eAAI,6CAAU,MAAM,CANxC,WAMwB,EADpB,CALJ,cAQI,iEACI,2CAAQ,OAAO,CAAf,YAA8B,OAAO,CAArC,YAVZ,QAUY,CADJ,CARJ,CADJ,CAgBH;;;;AChCc,oBAAqB,CAChC,GAAMC,CAAAA,eAAe,CAAGC,qCAAxB,GACA,GAAMC,CAAAA,IAAI,CAAGC,uCAAc,CAA3B,WAA2B,CAA3B,CAeA,GAAMC,CAAAA,MAAwC,CAAGF,IAAI,CAAJA,YAAAA,CAAAA,KAAAA,CAAAA,MAAAA,CACrCG,IAAI,0BAAI,mBAAI,CAAJ,iEAAJ,OADiCH,CAAAA,EAAAA,GAAAA,CAExCG,IAAI,EAAI,CACT,MAAO,CACHC,KAAK,CAAEC,gCAAU,CAACF,IAAI,CADnB,OACc,CADd,CAEHG,IAAI,CAAEH,IAAI,CAAJA,MAAAA,CAFV,IAAO,CAAP,CAHyCH,CAAAA,EAAAA,MAAAA,CAQrCI,KAAK,EAAI,CAAC,CAACA,KAAK,CAR5B,KAAiDJ,CAAjD,CAUA,mBACI,0CAAM,SAAS,CAAf,KAAgB,OAAO,CAAvB,GACKE,MAAM,CAANA,GAAAA,CAAW,UAAC,OAAD,IAAC,EAAD,wBACR,0CAAM,IAAI,CAAV,KAAW,GAAG,CAAd,mBACI,6CAAW,IAAI,CAAf,KAAuB,KAAK,CAA5B,OAFI,eAEJ,EADJ,CADQ,CAFpB,CAESA,CADL,CADJ,CASH;;;;;;;;;;;;AC1CD,GAAMK,CAAAA,iBAAiB,cAAGC,2CAAI,CAAC,IAAM,qGAAP,CAA9B,CAEe,wBAKZ,CACC,mBACI,8HACI,mEAFR,KAEQ,CADJ,CADJ,CAKH","sources":["webpack://jacdac-docs/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/CardActions/CardActions.js","webpack://jacdac-docs/./src/components/trace/TraceCard.tsx","webpack://jacdac-docs/./src/components/trace/TraceList.tsx","webpack://jacdac-docs/./src/components/ui/Markdown.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n} from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport { prettyDuration } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport { Trace } from \"../../../jacdac-ts/src/jdom/trace/trace\"\nimport Markdown from \"../ui/Markdown\"\nimport PacketsContext from \"../PacketsContext\"\nimport { navigate } from \"gatsby\"\n\nexport default function TraceCard(props: { name: string; trace: Trace }) {\n    const { name, trace } = props\n    const { description, duration, length } = trace\n    const { setReplayTrace } = useContext(PacketsContext)\n\n    const handleClick = () => {\n        setReplayTrace(trace)\n        navigate(\"/tools/player\");\n    }\n\n    return (\n        <Card>\n            <CardHeader\n                title={name}\n                subheader={`${prettyDuration(duration)}, ${length} packets`}\n            />\n            <CardContent>\n                {description && <Markdown source={description} />}\n            </CardContent>\n            <CardActions>\n                <Button onClick={handleClick} variant=\"outlined\">\n                    import\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { parseTrace } from \"../../../jacdac-ts/src/jdom/logparser\"\nimport { Trace } from \"../../../jacdac-ts/src/jdom/trace/trace\"\nimport { Grid } from \"@mui/material\"\nimport TraceCard from \"./TraceCard\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\n\nexport default function TraceList() {\n    const gridBreakpoints = useGridBreakpoints()\n    const data = useStaticQuery(graphql`\n        query {\n            allPlainText {\n                nodes {\n                    content\n                    parent {\n                        ... on File {\n                            name\n                            ext\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const traces: { trace: Trace; name: string }[] = data.allPlainText.nodes\n        .filter(node => node.parent?.ext === \".txt\")\n        .map(node => {\n            return {\n                trace: parseTrace(node.content as string),\n                name: node.parent.name as string,\n            }\n        })\n        .filter(trace => !!trace.trace)\n\n    return (\n        <Grid container spacing={2}>\n            {traces.map(({ trace, name }) => (\n                <Grid item key={name}>\n                    <TraceCard name={name} trace={trace} {...gridBreakpoints} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import React, { lazy } from \"react\"\nimport Suspense from \"./Suspense\"\nconst SuspensedMarkdown = lazy(() => import(\"./SuspensedMarkdown\"))\n\nexport default function Markdown(props: {\n    source: string\n    className?: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    components?: Partial<any>\n}) {\n    return (\n        <Suspense>\n            <SuspensedMarkdown {...props} />\n        </Suspense>\n    )\n}\n"],"names":["useContext","handleClick","setReplayTrace","navigate","prettyDuration","description","gridBreakpoints","useGridBreakpoints","data","useStaticQuery","traces","node","trace","parseTrace","name","SuspensedMarkdown","lazy"],"sourceRoot":""}