{"version":3,"file":"8253-7ad4ffa16f8751ac86e1.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Delete.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/NotInterested.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/SignalWifiBad.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/SignalWifiStatusbarNull.js","webpack://jacdac-docs/./node_modules/@mui/material/ListItemIcon/ListItemIcon.js","webpack://jacdac-docs/./src/components/hooks/useCommandPipeResults.ts","webpack://jacdac-docs/./src/components/icons/ConnectedIcon.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardWifi.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n}), 'NotInterested');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M24 8.98C20.93 5.9 16.69 4 12 4S3.07 5.9 0 8.98L12 21v-9h8.99L24 8.98zM19.59 14l-2.09 2.09L15.41 14 14 15.41l2.09 2.09L14 19.59 15.41 21l2.09-2.08L19.59 21 21 19.59l-2.08-2.09L21 15.41 19.59 14z\"\n}), 'SignalWifiBad');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4C7.31 4 3.07 5.9 0 8.98L12 21 24 8.98C20.93 5.9 16.69 4 12 4zM2.92 9.07C5.51 7.08 8.67 6 12 6s6.49 1.08 9.08 3.07L12 18.17l-9.08-9.1z\"\n}), 'SignalWifiStatusbarNull');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import { DependencyList, useEffect, useState } from \"react\"\nimport { CHANGE, EVENT } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDEvent } from \"../../../jacdac-ts/src/jdom/event\"\nimport { PackedValues } from \"../../../jacdac-ts/src/jdom/pack\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport useMounted from \"./useMounted\"\n\nexport default function useCommandPipeResults<TItem extends PackedValues>(\n    service: JDService,\n    cmd: number,\n    packFormat: string,\n    changeEvent?: JDEvent,\n    deps: DependencyList = []\n) {\n    const [results, setResults] = useState<PackedValues[]>([])\n    const mounted = useMounted()\n\n    const update = async () => {\n        const newResults = await service.receiveWithInPipe(cmd, packFormat)\n        if (mounted()) setResults(newResults || [])\n    }\n\n    // listen to change event if any\n    useEffect(\n        () => changeEvent?.subscribe(EVENT, update),\n        [changeEvent, cmd, packFormat, ...deps]\n    )\n    useEffect(\n        () => service?.subscribe(CHANGE, update),\n        [service, cmd, packFormat, ...deps]\n    )\n\n    return results as TItem[]\n}\n","import React from \"react\"\nimport { Tooltip } from \"@mui/material\"\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\"\nimport CircleIcon from \"@mui/icons-material/Circle\"\n\nexport default function ConnectedIcon(props: {\n    connected: boolean\n    tooltip?: boolean\n}) {\n    const { connected, tooltip, ...other } = props\n    let res = connected ? (\n        <CircleIcon color=\"success\" {...other} />\n    ) : (\n        <NotInterestedIcon color=\"disabled\" {...other} />\n    )\n    if (tooltip)\n        res = (\n            <Tooltip title={connected ? \"connected\" : \"disconnected\"}>\n                {res}\n            </Tooltip>\n        )\n    return res\n}\n","import React, { ChangeEvent, useCallback, useEffect, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport {\n    Badge,\n    Chip,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    Grid,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    TextField,\n    Tooltip,\n    Typography,\n} from \"@mui/material\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { useId } from \"react\"\nimport SettingsIcon from \"@mui/icons-material/Settings\"\nimport CmdButton from \"../CmdButton\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport {\n    WifiAPFlags,\n    WifiCmd,\n    WifiReg,\n    WifiEvent,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { toHex, unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useInterval from \"../hooks/useInterval\"\nimport useEvent from \"../hooks/useEvent\"\nimport useCommandPipeResults from \"../hooks/useCommandPipeResults\"\nimport ChipList from \"../ui/ChipList\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport { WifiServer } from \"../../../jacdac-ts/src/servers/wifiserver\"\nimport { Alert, AlertTitle } from \"@mui/material\"\nimport { EVENT } from \"../../../jacdac-ts/src/jdom/constants\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport WifiIcon from \"@mui/icons-material/Wifi\"\nimport DialogTitleWithClose from \"../ui/DialogTitleWithClose\"\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport AddIcon from \"@mui/icons-material/Add\"\nimport SignalWifiStatusbarNullIcon from \"@mui/icons-material/SignalWifiStatusbarNull\"\nimport SignalWifiBadIcon from \"@mui/icons-material/SignalWifiBad\"\nimport ConnectedIcon from \"../icons/ConnectedIcon\"\n\n// flags, rssi, channel, bssid, ssid\ntype ScanResult = [WifiAPFlags, number, number, Uint8Array, string]\n\n// priority, flags, ssid\ntype NetworkResult = [number, number, string]\n\nfunction toMAC(buffer: Uint8Array) {\n    const hex = toHex(buffer, \":\")\n    return hex\n}\n\nfunction toIP(buffer: Uint8Array): string {\n    if (!buffer) return undefined\n    if (buffer.length === 4)\n        return `${buffer[0]}.${buffer[1]}.${buffer[2]}.${buffer[3]}`\n    else return toHex(buffer, \".\")\n}\n\nfunction WiFiPasswordDialog(props: {\n    open: boolean\n    setOpen: (v: boolean) => void\n    service: JDService\n    ssid: string\n}) {\n    const { service, open, setOpen, ssid } = props\n    const [password, setPassword] = useState(\"\")\n    const passwordId = useId()\n    const handlePasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setPassword(event.target.value)\n    }\n    const handleAddNetwork = async () => {\n        await service.sendCmdPackedAsync<[string, string]>(\n            WifiCmd.AddNetwork,\n            [ssid, password || \"\"],\n            true\n        )\n        setPassword(\"\")\n        setOpen(false)\n    }\n    const handleCancel = () => {\n        setPassword(\"\")\n        setOpen(false)\n    }\n    return (\n        <Dialog open={open} fullWidth={true} maxWidth={\"lg\"}>\n            <DialogTitleWithClose onClose={handleCancel}>\n                Enter WiFi password for {ssid}\n            </DialogTitleWithClose>\n            <DialogContent>\n                <TextField\n                    id={passwordId}\n                    value={password}\n                    label=\"Password\"\n                    fullWidth={true}\n                    type=\"password\"\n                    onChange={handlePasswordChange}\n                />\n            </DialogContent>\n            <DialogActions>\n                <CmdButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!service}\n                    onClick={handleAddNetwork}\n                >\n                    Connect\n                </CmdButton>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nfunction NetworkListItem(props: {\n    service: JDService\n    ssid: string\n    network?: NetworkResult\n    info?: ScanResult\n    connected: boolean\n}) {\n    const { service, info, network, ssid, connected } = props\n    const [open, setOpen] = useState(false)\n    const [priority, networkFlags] = network || []\n    const [scanFlags, rssi, channel] = info || []\n    const [connectionFailed, setConnectionFailed] = useState(false)\n    const known = !!network\n    const scanned = !!info\n    const connectError = \"\"\n    const handleAddNetwork = () => setOpen(true)\n    const handleForgetNetwork = async () => {\n        setConnectionFailed(false)\n        await service.sendCmdPackedAsync<[string]>(WifiCmd.ForgetNetwork, [\n            ssid,\n        ])\n    }\n    const handlePriorityChange = async (ev: ChangeEvent<HTMLInputElement>) => {\n        const newPriority = parseInt(ev.target.value)\n        if (!isNaN(newPriority))\n            await service.sendCmdPackedAsync(\n                WifiCmd.SetNetworkPriority,\n                [newPriority, ssid],\n                true\n            )\n    }\n    // hasPassword == requires password\n    const connectionFailedEvent = useEvent(service, WifiEvent.ConnectionFailed)\n    useEffect(\n        () =>\n            connectionFailedEvent?.subscribe(EVENT, () => {\n                const [failedSsid] = connectionFailedEvent.unpackedValue\n                if (failedSsid === ssid) setConnectionFailed(true)\n            }),\n        [connectionFailedEvent]\n    )\n    return (\n        <>\n            <ListItem\n                secondaryAction={\n                    !known ? (\n                        <IconButtonWithTooltip\n                            color=\"primary\"\n                            disabled={!!connectError}\n                            onClick={handleAddNetwork}\n                            title=\"connect\"\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                    ) : (\n                        <CmdButton\n                            variant=\"outlined\"\n                            color=\"warning\"\n                            disabled={!!connectError}\n                            onClick={handleForgetNetwork}\n                            title={\"forget\"}\n                            icon={<DeleteIcon />}\n                        />\n                    )\n                }\n            >\n                <ListItemIcon>\n                    {connected ? (\n                        <Tooltip title=\"connected\">\n                            <WifiIcon />\n                        </Tooltip>\n                    ) : connectionFailed ? (\n                        <Tooltip title=\"connection failed\">\n                            <SignalWifiBadIcon color=\"error\" />\n                        </Tooltip>\n                    ) : known && !scanned ? (\n                        <Tooltip title=\"not found\">\n                            <SignalWifiStatusbarNullIcon />\n                        </Tooltip>\n                    ) : null}\n                </ListItemIcon>\n                <ListItemText\n                    primary={ssid}\n                    secondary={[\n                        known && `priority ${priority}`,\n                        scanned && `RSSI ${rssi}, channel ${channel}`,\n                        scanFlags && WifiAPFlags.WPS && `WPS`,\n                    ]\n                        .filter(s => !!s)\n                        .join(\", \")}\n                />\n\n                {known && (\n                    <TextField\n                        sx={{ ml: 1, mr: 1 }}\n                        type=\"number\"\n                        value={priority}\n                        label=\"priority\"\n                        onChange={handlePriorityChange}\n                    />\n                )}\n                {open && (\n                    <WiFiPasswordDialog\n                        service={service}\n                        open={open}\n                        setOpen={setOpen}\n                        ssid={ssid}\n                    />\n                )}\n            </ListItem>\n        </>\n    )\n}\n\nfunction APList(props: { service: JDService; connectedSsid: string }) {\n    const { service, connectedSsid } = props\n    const scan = useCallback(\n        () => service.sendCmdAsync(WifiCmd.Scan),\n        [service]\n    )\n    const knownNetworksChangedEvent = useEvent(\n        service,\n        WifiEvent.NetworksChanged\n    )\n    const knownNetworks = useCommandPipeResults<NetworkResult>(\n        service,\n        WifiCmd.ListKnownNetworks,\n        \"i16 i16 s\",\n        knownNetworksChangedEvent\n    )\n\n    // grad scan results\n    const scanCompleteEvent = useEvent(service, WifiEvent.ScanComplete)\n    const aps = useCommandPipeResults<ScanResult>(\n        service,\n        WifiCmd.LastScanResults,\n        \"u32 x[4] i8 u8 b[6] s[33]\",\n        scanCompleteEvent\n    )\n\n    // keep scanning\n    useInterval(true, scan, aps?.length ? 30000 : 10000, [service])\n\n    const priority = (s: string) =>\n        knownNetworks.find(n => n[2] === s)?.[0] || -Infinity\n\n    const ssids = unique([\n        ...(knownNetworks || []).map(kn => kn[2]),\n        ...(aps || []).map(ap => ap[4]),\n    ]).sort((l, r) => -priority(l) + priority(r))\n\n    return (\n        <List>\n            {aps !== undefined && !aps.length && (\n                <ListItem>\n                    <Alert severity=\"success\">Scanning for networks...</Alert>\n                </ListItem>\n            )}\n            {ssids.map(ssid => (\n                <NetworkListItem\n                    key={ssid}\n                    service={service}\n                    connected={connectedSsid === ssid}\n                    ssid={ssid}\n                    network={knownNetworks?.find(kn => kn[2] === ssid)}\n                    info={aps?.find(ap => ap[4] === ssid)}\n                />\n            ))}\n        </List>\n    )\n}\n\nexport default function DashboardWifi(props: DashboardServiceProps) {\n    const { service } = props\n    const [open, setOpen] = useState(false)\n    const [connectionFailed, setConnectionFailed] = useState(false)\n\n    const server = useServiceServer<WifiServer>(service)\n    const color = server ? \"primary\" : \"secondary\"\n    const { textPrimary } = useWidgetTheme(color)\n    const enabledRegister = service.register(WifiReg.Enabled)\n    const ssidRegister = service.register(WifiReg.Ssid)\n    const [ssid] = useRegisterUnpackedValue<[string]>(ssidRegister)\n    const ipAddressRegister = service.register(WifiReg.IpAddress)\n    const [ip] = useRegisterUnpackedValue<[Uint8Array]>(ipAddressRegister)\n    const macRegister = service.register(WifiReg.Eui48)\n    const [mac] = useRegisterUnpackedValue<[Uint8Array]>(macRegister)\n    const lostIpEvent = useEvent(service, WifiEvent.LostIp)\n    const gotIpEvent = useEvent(service, WifiEvent.GotIp)\n    const connectionFailedEvent = useEvent(service, WifiEvent.ConnectionFailed)\n    const connected = !!ip?.length\n\n    const connect = async () => {\n        await enabledRegister.sendSetBoolAsync(true)\n        await service.sendCmdAsync(WifiCmd.Reconnect)\n    }\n\n    const handleConnect = async () => {\n        if (connected) await enabledRegister.sendSetBoolAsync(false)\n        else {\n            setConnectionFailed(false)\n            await connect()\n        }\n    }\n    const handleConfigure = () => {\n        if (open) setOpen(false)\n        else {\n            setConnectionFailed(false)\n            setOpen(true)\n            connect()\n        }\n    }\n\n    // force register refreshs on various events\n    const refreshRegisters = () => {\n        ssidRegister.clearGetTimestamp()\n        ipAddressRegister.clearGetTimestamp()\n    }\n    useEffect(\n        () => gotIpEvent?.subscribe(EVENT, refreshRegisters),\n        [gotIpEvent]\n    )\n    useEffect(\n        () => lostIpEvent?.subscribe(EVENT, refreshRegisters),\n        [lostIpEvent]\n    )\n    useEffect(\n        () =>\n            connectionFailedEvent?.subscribe(EVENT, () =>\n                setConnectionFailed(true)\n            ),\n        [connectionFailedEvent]\n    )\n    return (\n        <>\n            <Grid\n                container\n                spacing={1}\n                style={{ color: textPrimary, minWidth: \"16rem\" }}\n            >\n                {server && (\n                    <Grid item xs={12}>\n                        <Alert severity=\"warning\">\n                            <AlertTitle>Test WiFi</AlertTitle>\n                            This WiFi does not exist; it is purely for testing\n                            purposes.\n                        </Alert>\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <Typography component=\"span\" variant=\"subtitle2\">\n                        WiFi\n                    </Typography>\n                    {(ssid || ip || mac) && (\n                        <ChipList>\n                            {!!ssid && <Chip color=\"primary\" label={ssid} />}\n                            {!!ip && <Chip label={`IP: ${toIP(ip)}`} />}\n                            {!!mac && <Chip label={`MAC: ${toMAC(mac)}`} />}\n                        </ChipList>\n                    )}\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1} direction=\"row\">\n                        <Grid item>\n                            <CmdButton\n                                trackName=\"dashboard.wifi.connect\"\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={handleConnect}\n                                title={\n                                    connected\n                                        ? \"disconnect WiFi\"\n                                        : \"connect WiFi\"\n                                }\n                                icon={<ConnectedIcon connected={connected} />}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <IconButtonWithTooltip\n                                onClick={handleConfigure}\n                                title={\"configure\"}\n                            >\n                                <Badge\n                                    color=\"error\"\n                                    overlap=\"circular\"\n                                    variant=\"dot\"\n                                    invisible={!connectionFailed}\n                                >\n                                    <SettingsIcon />\n                                </Badge>\n                            </IconButtonWithTooltip>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                {open && <APList service={service} connectedSsid={ssid} />}\n            </Grid>\n        </>\n    )\n}\n"],"names":["deps","useState","mounted","useMounted","update","newResults","service","setResults","useEffect","changeEvent","other","res","connected","hex","toHex","buffer","passwordId","useId","handlePasswordChange","event","setPassword","handleAddNetwork","WifiCmd","password","setOpen","handleCancel","network","info","known","scanned","connectError","handleForgetNetwork","setConnectionFailed","handlePriorityChange","newPriority","parseInt","ev","isNaN","connectionFailedEvent","useEvent","WifiEvent","failedSsid","connectionFailed","scanFlags","WifiAPFlags","s","ml","mr","open","scan","useCallback","knownNetworksChangedEvent","knownNetworks","useCommandPipeResults","scanCompleteEvent","aps","useInterval","priority","n","ssids","unique","kn","ap","ssid","connectedSsid","server","useServiceServer","color","useWidgetTheme","enabledRegister","WifiReg","ssidRegister","useRegisterUnpackedValue","ipAddressRegister","macRegister","lostIpEvent","gotIpEvent","ip","connect","handleConnect","handleConfigure","refreshRegisters","minWidth","toIP","toMAC"],"sourceRoot":""}