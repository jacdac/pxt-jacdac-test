{"version":3,"file":"8519-ec9e04fca3e07f0c0c64.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;AACnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;AACf,4CAA4C,mBAAO,CAAC,KAAuB;AAC3E,kBAAkB,mBAAO,CAAC,KAAmB;AAC7C;AACA;AACA,CAAC;AACD,SAAe;;;;;;;;;;;;;;;;;;;;ACMf,GAAMA,CAAAA,gBAAgB,cAAGC,2CAAI,CAAC,IAAM,+IAAP,CAA7B,CAEe,oCAA4D,CACvE,GAAM,mBAAN,MACA,GAAM,2BAA0BC,+CAAQ,CAAxC,CAAwC,CAAxC,CACA,GAAM,6BAA4BA,+CAAQ,CAACC,gHAAD,CAA1C,CACA,GAAM,mBAAkBD,+CAAQ,CAAhC,EAAgC,CAAhC,CAEAE,gDAAS,CACL,IACIC,OADJ,OACIA,EAAAA,OADJ,SACIA,CADJ,MACIA,CAAAA,OAAO,CAAPA,SAAAA,CAAAA,kEAAAA,CAAqCC,GAAD,EAAiB,CACjD,GAAM,OAASA,GAAG,CAAHA,QAAAA,CAEbC,4GAFaD,CAAf,CAGAE,OAAO,CACH,KAAI,GAAJ,UAAI,OAAJ,cAAI,CAAJ,IACU,UAAC,UAAD,SAAC,EAAD,WACFC,CAAAA,wEAAiB,oBADf,IACe,CADf,CADV,gBADJD,EAAO,CAAPA,CANH,CAEDH,CAFC,CAcL,CAdJD,OAcI,CAdK,CAATA,CAiBA,GAAMM,CAAAA,eAAe,CAAG,4BAGnB,CACDC,WAAW,CAAXA,WAAW,CAAXA,CACAC,YAAY,CAAZA,YAAY,CAAZA,CALJ,EAQA,GAAMC,CAAAA,WAAW,CAAGC,kDAAW,+GAAC,WAAY,CACxC,GAAMC,CAAAA,QAA+D,CACjE,CAAC,CAAC,oBAAsBC,+GAAtB,CAAD,CAAD,CADJ,CAEA,GAAMC,CAAAA,IAAI,CAAGC,0EAAM,gBAAnB,QAAmB,CAAnB,CACA,KAAMb,CAAAA,OAAO,CAAPA,YAAAA,CAAqBc,wGAArBd,CAAN,IAAMA,CAAN,CAJ2B,GAK5B,oBALH,OAKG,CAL4B,CAA/B,CAOA,GAAMe,CAAAA,QAAQ,CAAG,WAAa,CAA9B,UAEA,mBACI,kHAAM,SAAS,CAAf,KAAgB,SAAS,CAAzB,SAAmC,OAAO,CAA1C,gBACI,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,iBACI,4DAAMC,IAAI,EAFlB,yBAEQ,CADJ,CADJ,CAIKC,QAAQ,eACL,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,iBACI,iIACI,mEACI,QAAQ,CADZ,SAEI,SAAS,CAFb,UAGI,QAAQ,CAV5B,eAOgB,EADJ,CADJ,CALR,CAeKA,QAAQ,eACL,kHAAM,IAAI,CAAV,KAAW,EAAE,CAAb,iBACI,8GACI,OAAO,CADX,WAEI,KAAK,CAFT,YAGI,QAAQ,CAHZ,SAII,OAAO,CAJX,YAKI,IAAI,cAAE,+HALV,IAKU,CALV,EAlBhB,WAkBgB,CADJ,CAhBR,CADJ,CA+BH","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Keyboard.js","webpack://jacdac-docs/./src/components/dashboard/DashboardHIDKeyboard.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 5H4c-1.1 0-1.99.9-1.99 2L2 17c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2h-2v-2zM8 8h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm0-3H5V8h2v2zm9 7H8v-2h8v2zm0-4h-2v-2h2v2zm0-3h-2V8h2v2zm3 3h-2v-2h2v2zm0-3h-2V8h2v2z\"\n}), 'Keyboard');\nexports.default = _default;","import React, { lazy, useCallback, useEffect, useState } from \"react\"\nimport { Grid } from \"@mui/material\"\nimport {\n    HidKeyboardAction,\n    HidKeyboardCmd,\n    HidKeyboardCmdPack,\n    HidKeyboardModifiers,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport CmdButton from \"../CmdButton\"\nimport KeyboardIcon from \"@mui/icons-material/Keyboard\"\nimport Suspense from \"../ui/Suspense\"\nimport {\n    COMMAND_RECEIVE,\n    Packet,\n    renderKeyboardKey,\n} from \"../../../jacdac-ts/src/jacdac\"\nconst KeyboardKeyInput = lazy(() => import(\"../ui/KeyboardKeyInput\"))\n\nexport default function DashboardHIDKeyboard(props: DashboardServiceProps) {\n    const { service, expanded } = props\n    const [selector, setSelector] = useState(0)\n    const [modifiers, setModifiers] = useState(HidKeyboardModifiers.None)\n    const [keys, setKeys] = useState(\"\")\n\n    useEffect(\n        () =>\n            service?.subscribe(COMMAND_RECEIVE, (pkt: Packet) => {\n                const [rest] = pkt.jdunpack<\n                    [[number, HidKeyboardModifiers, HidKeyboardAction][]]\n                >(HidKeyboardCmdPack.Key)\n                setKeys(\n                    rest\n                        ?.map(([selector, modifiers]) =>\n                            renderKeyboardKey(selector, modifiers, true)\n                        )\n                        .join(\", \") || \"\"\n                )\n            }),\n        [service]\n    )\n\n    const handleKeyChange = (\n        newSelector: number,\n        newModifiers: HidKeyboardModifiers\n    ) => {\n        setSelector(newSelector)\n        setModifiers(newModifiers)\n    }\n\n    const handleClick = useCallback(async () => {\n        const unpacked: [[number, HidKeyboardModifiers, HidKeyboardAction][]] =\n            [[[selector, modifiers, HidKeyboardAction.Press]]]\n        const data = jdpack(\"r: u16 u8 u8\", unpacked)\n        await service.sendCmdAsync(HidKeyboardCmd.Key, data)\n    }, [selector, modifiers, service])\n\n    const disabled = !selector && !modifiers\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item xs={12}>\n                <pre>{keys || \"HID keyboard waiting...\"}</pre>\n            </Grid>\n            {expanded && (\n                <Grid item xs={12}>\n                    <Suspense>\n                        <KeyboardKeyInput\n                            selector={selector}\n                            modifiers={modifiers}\n                            onChange={handleKeyChange}\n                        />\n                    </Suspense>\n                </Grid>\n            )}\n            {expanded && (\n                <Grid item xs={12}>\n                    <CmdButton\n                        variant=\"outlined\"\n                        title=\"send keys\"\n                        disabled={disabled}\n                        onClick={handleClick}\n                        icon={<KeyboardIcon />}\n                    >\n                        Send keys\n                    </CmdButton>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"names":["KeyboardKeyInput","lazy","useState","HidKeyboardModifiers","useEffect","service","pkt","HidKeyboardCmdPack","setKeys","renderKeyboardKey","handleKeyChange","setSelector","setModifiers","handleClick","useCallback","unpacked","HidKeyboardAction","data","jdpack","HidKeyboardCmd","disabled","keys","expanded"],"sourceRoot":""}